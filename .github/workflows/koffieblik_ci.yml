name: CI for Koffieblik

on:
  push:
    branches: [main]
    paths:
      - 'koffieblik/**'
      - 'API/**'
      - '.github/workflows/koffieblik_ci.yml'
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install API dependencies
        working-directory: ./API
        run: npm ci --legacy-peer-deps

      - name: Install Koffieblik dependencies
        working-directory: ./koffieblik
        run: npm ci --legacy-peer-deps

      - name: Copy PROD .env from secret
        run: echo "${{ secrets.ENV_PROD }}" > .env.prod

      - name: Start Docker Compose (PROD)
        run: |
          ENV_FILE=.env.prod docker compose --profile prod up -d
          echo "Waiting for API to start..."
          for i in {1..20}; do
            if curl -s http://localhost:5000/health; then
              echo "API is ready!"
              break
            fi
            sleep 3
          done

      - name: Install Newman
        run: npm install -g newman newman-reporter-htmlextra

      - name: Run API Tests against Local Server
        run: |
          mkdir -p test-results
          newman run API/tests/Testing.postman_collection.json \
            --env-var "URL=http://localhost:5000/" \
            --reporters cli,htmlextra \
            --reporter-htmlextra-export test-results/api-local-tests.html

      - name: Run API Tests against Production Server
        run: |
          mkdir -p test-results
          newman run API/tests/Testing.postman_collection.json \
            --env-var "URL=https://api.diekoffieblik.co.za" \
            --reporters cli,htmlextra \
            --reporter-htmlextra-export test-results/api-prod-tests.html \
            --suppress-exit-code  # Don't fail the workflow if prod tests fail

      - name: Run Playwright Tests via Makefile
        working-directory: ./koffieblik
        run: make test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results

      - name: Stop Docker Compose
        if: always()
        run: ENV_FILE=.env.prod docker compose --profile prod down
